.yui3-g
  .yui3-u-1
    %h2= "#{@project.client}: #{@project}"
.yui3-g
  .yui3-u-1
    .gradient_border_wrap
      .gradient_border_content
        %ul.subnav
          %li= link_to t(:edit), edit_project_path
          %li= link_to "#{t(:back_to_client)}: #{@project.client}" , @project.client
          %li= link_to t(:new_ticket), new_ticket_path(:project_id => @project)
.yui3-g
  .yui3-u-1
    .gradient_border_wrap
      .gradient_border_content
        %h3= "#{t(:status)}: #{@project.client.status}"
        %table.tickets
          %thead
            %tr
              %th= t(:tickets)
              %th= t(:work_units)
              %th= t(:hours)
              %th= t(:edit)
          %tbody
            - @project.tickets.each do |ticket|
              %tr
                %td= link_to ticket, ticket
                %td= ticket.work_units.count
                -# TODO make a method for this
                %td= ticket.work_units.inject(0) {|hours, work_unit| hours + work_unit.hours }
                %td= link_to t(:edit), edit_ticket_path(ticket)
.yui3-g
  .yui3-u-1-2
    .gradient_border_wrap
      .gradient_border_content
        = render :partial => "comments/comments", :locals => {:comments => @project.comments}
        = render :partial => "comments/comment_form", :locals => { :commentable_id => @project.id,
          :commentable_field => "project_id",
          :commentable_type => "Project",
          :refurl => project_path(@project),
          :comment_num => @project.id }
  .yui3-u-1-2
    .gradient_border_wrap
      .gradient_border_content
        %h2= t(:files)
        %ul
          - @project.file_attachments.each do |file_attachment|
            %li= link_to file_attachment.attachment_file_file_name, file_attachment_path(file_attachment.id)
        = link_to t(:add_file_attachment), new_file_attachment_path( :project_id => @project.id )
